/*
 * map.c
 *
 *  Created on: 2018/04/14
 *      Author: shts
 */
#include "iodefine.h"
#include "map.h"
#include "LED.h"
#include "serial.h"

MAP map;

void init_Map(void) {
	int i, j;

	map.pos_x = 0;
	map.pos_y = 0;
	map.direction = 0;
	map.goal_x = 1;
	map.goal_y = 0;
	map.map_size = mp_size;
	map.tmp_path = 0;
	map.wall = 0;

	for (i = 0; i < map.map_size - 1; i++) {
		map.wall_map_x[i] = 0;
		map.wall_map_y[i] = 0;
		map.searched_map_x[i] = 0xffffffff;
		map.searched_map_y[i] = 0xffffffff;
	}

	for (i = 0; i < map.map_size; i++) {
		for (j = 0; j < map.map_size; j++) {
			map.a_dist_map[i][j] = 255;
			map.dist_map[i][j] = 255;
		}
	}
	map.a_dist_map[map.goal_x][map.goal_y] = 0;
	map.dist_map[map.goal_x][map.goal_y] = 0;
}

void direction_detect() {
	if (map.direction == 0) {
		map.pos_y += 1;
		/*
		 sta_LED_drv(Red, off);
		 sta_LED_drv(Yerrow, off);
		 sta_LED_drv(Green, on);
		 */
	} else if (map.direction == 1) {
		map.pos_x += 1;
		/*
		 sta_LED_drv(Red, on);
		 sta_LED_drv(Yerrow, off);
		 sta_LED_drv(Green, off);
		 */
	} else if (map.direction == 3) {
		map.pos_x -= 1;
		/*
		 sta_LED_drv(Red, off);
		 sta_LED_drv(Yerrow, on);
		 sta_LED_drv(Green, off);
		 */
	} else if (map.direction == 2) {
		map.pos_y -= 1;
		/*
		 sta_LED_drv(Red, off);
		 sta_LED_drv(Yerrow, off);
		 sta_LED_drv(Green, off);
		 */
	}
	drv_Status_LED(Red, map.pos_y & 1);
	drv_Status_LED(Yerrow, (map.pos_x & 1) >> 0);
	drv_Status_LED(Green, (map.pos_x & 2) >> 1);

}



